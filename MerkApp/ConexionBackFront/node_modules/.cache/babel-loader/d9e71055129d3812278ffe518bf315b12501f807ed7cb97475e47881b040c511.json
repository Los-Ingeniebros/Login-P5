{"ast":null,"code":"var _jsxFileName = \"/home/javiermancera/Documents/Login-P5/MerkApp/ConexionBackFront/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Name from './Name';\nimport LogInForm from './Login';\n//import NewNameForm from './NewNameForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState({\n    name: undefined,\n    last_name: undefined\n  });\n  function fetchNameHandler() {\n    fetch('http://127.0.0.1:5000/login').then(response => {\n      return response.json(); //Si aquí hay un error, quiere decir que el back-end está mal.\n    }).then(data => {\n      //Lambda en JS\n      setName(data);\n    });\n  }\n\n  /*\n  async function addName (name) {\n    console.log(name);\n    const response = await fetch('http://127.0.0.1:5000/add_name', {\n      method:'POST',\n      body: JSON.stringify(name),\n      headers: {\n        'Content-Type':'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    if (data.error !== undefined) {\n      alert(\"ERROR! \" + data.error);\n    } else {\n      alert(\"Name added!\");\n    }\n  }\n  */\n\n  async function ingresar(name) {\n    //console.log(name);\n    const response = await fetch('http://127.0.0.1:5000/login', {\n      method: 'POST',\n      body: JSON.stringify(name),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    if (data.error !== undefined) {\n      alert(\"ERROR! \" + data.error);\n    } else {\n      alert(\"Usuario registrado!\");\n    }\n  }\n\n  // <Name name={name} />\n  // <button onClick={fetchNameHandler}>New Name</button>\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(LogInForm, {\n        onSaveName: ingresar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Lp9z2UGo09xLIZ+b62No5PbJ7JQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Name","LogInForm","jsxDEV","_jsxDEV","App","_s","name","setName","undefined","last_name","fetchNameHandler","fetch","then","response","json","data","ingresar","method","body","JSON","stringify","headers","console","log","error","alert","className","children","onSaveName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/javiermancera/Documents/Login-P5/MerkApp/ConexionBackFront/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Name from './Name';\nimport LogInForm from './Login';\n//import NewNameForm from './NewNameForm';\n\nfunction App() {\n\n  const [name, setName] = useState({\n    name:undefined,\n    last_name:undefined\n  });\n\n  function fetchNameHandler() {\n    fetch('http://127.0.0.1:5000/login')\n    .then((response) => {\n      return response.json(); //Si aquí hay un error, quiere decir que el back-end está mal.\n    })\n    .then((data) => { //Lambda en JS\n      setName(data);\n    })\n  }\n\n  /*\n  async function addName (name) {\n    console.log(name);\n    const response = await fetch('http://127.0.0.1:5000/add_name', {\n      method:'POST',\n      body: JSON.stringify(name),\n      headers: {\n        'Content-Type':'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    if (data.error !== undefined) {\n      alert(\"ERROR! \" + data.error);\n    } else {\n      alert(\"Name added!\");\n    }\n  }\n  */\n\n  async function ingresar (name) {\n    //console.log(name);\n    const response = await fetch('http://127.0.0.1:5000/login', {\n      method:'POST',\n      body: JSON.stringify(name),\n      headers: {\n        'Content-Type':'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    if (data.error !== undefined) {\n      alert(\"ERROR! \" + data.error);\n    } else {\n      alert(\"Usuario registrado!\");\n    }\n  }\n\n  // <Name name={name} />\n  // <button onClick={fetchNameHandler}>New Name</button>\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">                \n        <LogInForm onSaveName={ingresar}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,SAAS;AAC/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BO,IAAI,EAACE,SAAS;IACdC,SAAS,EAACD;EACZ,CAAC,CAAC;EAEF,SAASE,gBAAgBA,CAAA,EAAG;IAC1BC,KAAK,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MAAE;MAChBR,OAAO,CAACQ,IAAI,CAAC;IACf,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,eAAeC,QAAQA,CAAEV,IAAI,EAAE;IAC7B;IACA,MAAMO,QAAQ,GAAG,MAAMF,KAAK,CAAC,6BAA6B,EAAE;MAC1DM,MAAM,EAAC,MAAM;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,IAAI,CAAC;MAC1Be,OAAO,EAAE;QACP,cAAc,EAAC;MACjB;IACF,CAAC,CAAC;IACF,MAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;IAClCQ,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjB,IAAIA,IAAI,CAACS,KAAK,KAAKhB,SAAS,EAAE;MAC5BiB,KAAK,CAAC,SAAS,GAAGV,IAAI,CAACS,KAAK,CAAC;IAC/B,CAAC,MAAM;MACLC,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF;;EAEA;EACA;EACA,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxB,OAAA;MAAQuB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BxB,OAAA,CAACF,SAAS;QAAC2B,UAAU,EAAEZ;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC3B,EAAA,CAhEQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAkEZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}